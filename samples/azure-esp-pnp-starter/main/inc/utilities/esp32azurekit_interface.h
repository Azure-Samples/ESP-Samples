/************************************************************************************************
 * This code was automatically generated by Digital Twin Code Generator tool 0.6.3.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 *
 * Generated Date: Thursday, November 7, 2019
 ***********************************************************************************************/

#ifndef ESP32AZUREKIT_INTERFACE_H
#define ESP32AZUREKIT_INTERFACE_H

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>
#include "digitaltwin_interface_client.h"
#include "azure_c_shared_utility/xlogging.h"
#include "azure_c_shared_utility/threadapi.h"

#include "inc/utilities/digitaltwin_client_helper.h"
#include "inc/utilities/digitaltwin_serializer.h"
#include "parson.h"
#include "inc/esp32AzureKit_impl.h"

#ifdef __cplusplus
extern "C"
{
#endif

typedef enum ESP32AZUREKIT_TELEMETRY_TAG
{
    Esp32AzureKit_PITCH_TELEMETRY,
    Esp32AzureKit_ROLL_TELEMETRY,
    Esp32AzureKit_PRESSURE_TELEMETRY,
    Esp32AzureKit_ALTITUDE_TELEMETRY,
    Esp32AzureKit_MAGNETX_TELEMETRY,
    Esp32AzureKit_MAGNETY_TELEMETRY,
    Esp32AzureKit_MAGNETZ_TELEMETRY,
    Esp32AzureKit_TEMP_TELEMETRY,
    Esp32AzureKit_HUMID_TELEMETRY,
    Esp32AzureKit_LIGHT_TELEMETRY
} ESP32AZUREKIT_TELEMETRY;

typedef enum ESP32AZUREKIT_READONLY_PROPERTY_TAG
{
    Esp32AzureKit_FANSPEED_PROPERTY,
    Esp32AzureKit_TEMPTHRESHOLD_PROPERTY
} ESP32AZUREKIT_PROPERTY;

// DigitalTwin interface name from service perspective.
static const char Esp32AzureKitInterfaceId[] = "urn:pebj:interfaces:esp32AzureKit:2"; //Todo: kconfig
static const char Esp32AzureKitInterfaceInstanceName[] = "esp32AzureKit";

// Telemetry names for this interface.

static const char Esp32AzureKitInterface_PitchTelemetry[] = "pitch";

static const char Esp32AzureKitInterface_RollTelemetry[] = "roll";

static const char Esp32AzureKitInterface_PressureTelemetry[] = "pressure";

static const char Esp32AzureKitInterface_AltitudeTelemetry[] = "altitude";

static const char Esp32AzureKitInterface_MagnetXTelemetry[] = "MagnetX";

static const char Esp32AzureKitInterface_MagnetYTelemetry[] = "MagnetY";

static const char Esp32AzureKitInterface_MagnetZTelemetry[] = "MagnetZ";

static const char Esp32AzureKitInterface_TempTelemetry[] = "temp";

static const char Esp32AzureKitInterface_HumidTelemetry[] = "humid";

static const char Esp32AzureKitInterface_LightTelemetry[] = "light";

static const char Esp32AzureKitInterface_MinFreeHeapTelemetry[] = "MinFreeHeap";

// Property names for this interface.

#define Esp32AzureKitInterface_FanSpeedProperty "fanSpeed"

#define Esp32AzureKitInterface_TempThresholdProperty "tempThreshold"

// Command names for this interface

#define Esp32AzureKitInterface_EchoCommand "echo"

#define Esp32AzureKitInterface_StartFanCommand "startFan"

#define Esp32AzureKitInterface_StopFanCommand "stopFan"

// Methods
DIGITALTWIN_INTERFACE_CLIENT_HANDLE Esp32AzureKitInterface_Create();

void Esp32AzureKitInterface_Close(DIGITALTWIN_INTERFACE_CLIENT_HANDLE digitalTwinInterfaceClientHandle);

DIGITALTWIN_CLIENT_RESULT Esp32AzureKitInterface_Telemetry_SendPitch();

DIGITALTWIN_CLIENT_RESULT Esp32AzureKitInterface_Telemetry_SendRoll();

DIGITALTWIN_CLIENT_RESULT Esp32AzureKitInterface_Telemetry_SendPressure();

DIGITALTWIN_CLIENT_RESULT Esp32AzureKitInterface_Telemetry_SendAltitude();

DIGITALTWIN_CLIENT_RESULT Esp32AzureKitInterface_Telemetry_SendMagnetX();

DIGITALTWIN_CLIENT_RESULT Esp32AzureKitInterface_Telemetry_SendMagnetY();

DIGITALTWIN_CLIENT_RESULT Esp32AzureKitInterface_Telemetry_SendMagnetZ();

DIGITALTWIN_CLIENT_RESULT Esp32AzureKitInterface_Telemetry_SendTemp();

DIGITALTWIN_CLIENT_RESULT Esp32AzureKitInterface_Telemetry_SendHumid();

DIGITALTWIN_CLIENT_RESULT Esp32AzureKitInterface_Telemetry_SendLight();

DIGITALTWIN_CLIENT_RESULT Esp32AzureKitInterface_Telemetry_SendMinFreeHeap();

DIGITALTWIN_CLIENT_RESULT Esp32AzureKitInterface_Telemetry_SendAll();

#ifdef __cplusplus
}
#endif

#endif  // ESP32AZUREKIT_INTERFACE_H
